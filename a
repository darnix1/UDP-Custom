#!/bin/bash

# Función para mostrar una barra de progreso animada con colores dinámicos
fun_bar() {
    CMD[0]="$1"
    CMD[1]="$2"
    (
        [[ -e $HOME/fim ]] && rm $HOME/fim
        ${CMD[0]} -y >/dev/null 2>&1
        ${CMD[1]} -y >/dev/null 2>&1
        touch $HOME/fim
    ) >/dev/null 2>&1 &
    tput civis
    echo -ne "  \033[0;33mProcesando \033[1;37m- \033[0;33m["
    
    # Longitud de la barra de progreso
    BAR_LENGTH=18
    POSITION=0
    DIRECTION=1  # 1 para derecha, -1 para izquierda
    
    # Colores dinámicos para la barra de progreso
    COLORS=("\033[0;31m" "\033[0;32m" "\033[0;33m" "\033[0;34m" "\033[0;35m" "\033[0;36m")
    COLOR_INDEX=0

    while true; do
        # Mover el cursor al inicio de la barra (evita corchetes duplicados)
        echo -ne "\r"
        echo -ne "  \033[0;33mProcesando \033[1;37m- \033[0;33m["
        
        # Dibujar espacios y el punto animado
        for ((i = 0; i < BAR_LENGTH; i++)); do
            if [ $i -eq $POSITION ]; then
                echo -ne "${COLORS[$((COLOR_INDEX % ${#COLORS[@]}))]}."
            else
                echo -ne " "
            fi
        done
        
        # Cerrar con UN solo corchete
        echo -ne "\033[0;33m]"
        
        # Actualizar posición y dirección
        ((POSITION += DIRECTION))
        if [ $POSITION -eq $((BAR_LENGTH - 1)) ] || [ $POSITION -eq 0 ]; then
            ((DIRECTION *= -1))
            ((COLOR_INDEX++))
        fi
        
        # Comprobar si el proceso terminó
        [[ -e $HOME/fim ]] && rm $HOME/fim && break
        
        # Pausa para la animación
        sleep 0.1s
    done
    
    # Mensaje final (OK)
    echo -e "\033[1;37m -\033[1;32m OK !\033[1;37m"
    tput cnorm
}

# Función simulada para la tarea en segundo plano
simulated_task() {
    echo "Simulando tarea en segundo plano..."
    sleep 10  # Simula un proceso que tarda 5 segundos
}

# Ejemplo de uso
echo -e "\033[36;1m│      EJEMPLO DE BARRA DE PROGRESO CON COLORES DINÁMICOS     \033[0m"
echo ""
fun_bar 'simulated_task' 'echo "Tarea finalizada"'
